# This job will execute the changeset_testlist.py script, which in turn will
# compute a list of tests that need to be executed.
# The script itself produces the correct output to set a variable for a future
# stage.

parameters:
- name: reference_pipeline_name
  type: string
- name: skip_all_hw_tests
  type: boolean
  default: false
- name: build_fpgaimg_x3x0
  type: boolean
  default: false
- name: build_fpgaimg_n3xx
  type: boolean
  default: false
- name: build_fpgaimg_e31x
  type: boolean
  default: false
- name: build_fpgaimg_e32x
  type: boolean
  default: false
- name: build_fpgaimg_x410
  type: boolean
  default: false
- name: build_fpgaimg_x440
  type: boolean
  default: false

jobs:
  - job: analyze
    displayName: Analyze Changeset
    variables:
      - group: github-ettusresearch-uhddev
    pool:
      name: Drivers-NIBuildFarm-RFMIBUILD
      demands: sh
    steps:
    - checkout: self
      clean: true
    - bash: |
        python3 -m venv $AGENT_TEMPDIRECTORY/ac_venv
        source $AGENT_TEMPDIRECTORY/ac_venv/bin/activate
        pip install --upgrade pip
        pip install ruamel.yaml clang-format==14.0.6 ni-python-styleguide requests
      displayName: setup venv
    - bash: |
        source $AGENT_TEMPDIRECTORY/ac_venv/bin/activate
        git branch
        set -e
        set -o xtrace
        if [ "$BUILD_REASON" == "PullRequest" ]; then
          EXTRA_ARGS="--github-label-api-endpoint https://oauth2:$OAUTH_TOKEN@api.github.com/repos/$BUILD_REPOSITORY_ID/issues/$SYSTEM_PULLREQUEST_PULLREQUESTNUMBER/labels"
        fi
        if [ "$SKIP_HW_TESTS" == "true" ]; then
          EXTRA_ARGS="$EXTRA_ARGS --remove-test hw devtest"
        fi
        if [ "${{ parameters.build_fpgaimg_x3x0 }}" == "True" ]; then
          EXTRA_ARGS="$EXTRA_ARGS --add-test fpga.usrp3.x3xx"
        fi
        if [ "${{ parameters.build_fpgaimg_n3xx }}" == "True" ]; then
          EXTRA_ARGS="$EXTRA_ARGS --add-test fpga.usrp3.n3xx"
        fi
        if [ "${{ parameters.build_fpgaimg_e31x }}" == "True" ]; then
          EXTRA_ARGS="$EXTRA_ARGS --add-test fpga.usrp3.e31x"
        fi
        if [ "${{ parameters.build_fpgaimg_e32x }}" == "True" ]; then
          EXTRA_ARGS="$EXTRA_ARGS --add-test fpga.usrp3.e320"
        fi
        if [ "${{ parameters.build_fpgaimg_x410 }}" == "True" ]; then
          EXTRA_ARGS="$EXTRA_ARGS --add-test fpga.usrp3.x410"
        fi
        if [ "${{ parameters.build_fpgaimg_x440 }}" == "True" ]; then
          EXTRA_ARGS="$EXTRA_ARGS --add-test fpga.usrp3.x440"
        fi
        echo "Using pipeline $PIPELINE_PIPELINE_NAME / $PIPELINE_RUN_NAME as reference (branch $PIPELINE_SOURCE_BRANCH, commit $PIPELINE_SOURCE_COMMIT)"
        python3 tools/changeset_testlist.py \
                --target-branch $PIPELINE_SOURCE_COMMIT \
                --set-azdo-var UhdTestList \
                --list-tests --verbose $EXTRA_ARGS
      name: gen_testlist
      displayName: Generate Test-List
      env:
        OAUTH_TOKEN: $(github_uhddev_token)
        SKIP_HW_TESTS: ${{ parameters.skip_all_hw_tests }}
        PIPELINE_SOURCE_BRANCH: $(resources.pipeline.${{ parameters.reference_pipeline_name }}.sourceBranch)
        PIPELINE_SOURCE_COMMIT: $(resources.pipeline.${{ parameters.reference_pipeline_name }}.sourceCommit)
        PIPELINE_PIPELINE_NAME: $(resources.pipeline.${{ parameters.reference_pipeline_name }}.pipelineName)
        PIPELINE_RUN_NAME: $(resources.pipeline.${{ parameters.reference_pipeline_name }}.runName)

    - bash: |
        if [[ $AGENT_OS == "Windows_NT" ]]; then
            VENV_BIN_DIR="Scripts"
        else
            VENV_BIN_DIR="bin"
        fi
        source $AGENT_TEMPDIRECTORY/ac_venv/$VENV_BIN_DIR/activate
        if [[ $GEN_TESTLIST_UHDTESTLIST =~ "clang-format" ]]; then
            $AGENT_TEMPDIRECTORY/ac_venv/$VENV_BIN_DIR/python3 \
                tools/run-clang-format.py . -r --patch-file clang-format.patch \
                    --clang-format-executable `which clang-format`
        fi
      name: run_clang_format
      displayName: Conditionally run clang-format

    - publish: clang-format.patch
      artifact: clang-format patch file
      displayName: Publish clang-format patch file
      condition: failed()

