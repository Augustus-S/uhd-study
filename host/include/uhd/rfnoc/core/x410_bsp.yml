type: x410
type_id: A400
family: ULTRASCALE

parameters:
  RF_BW: 200
  ENABLE_DRAM: True
  NUM_DRAM_BANKS: 1
  NUM_DRAM_CHANS: 4
  DRAM_WIDTH: 64

make_defs:
  - RF_BW=${parameters['RF_BW']}
  - RF_CORE_${parameters['RF_BW']}M=1
  - DRAM_BANKS=${0 if not parameters['ENABLE_DRAM'] else parameters['NUM_DRAM_BANKS']}
  - DRAM_CH=${0 if not parameters['ENABLE_DRAM'] else parameters['NUM_DRAM_CHANS']}
  - DRAM_W=${parameters['DRAM_WIDTH']}

generate_dts: True
dts_includes:
  - x410-version-info.dtsi
  - x410-fpga.dtsi
  - x4xx-common.dtsi
  - x410-rfdc.dtsi
  # Strictly speaking, this one is for the DMA/CHDR transport adapter, but as
  # the DMA engine is always instantiated, we include it here.
  - x4xx-dma.dtsi

# This describes available clocks from the BSP. Note that the indices are not
# arbitrary: Making clock info fully discoverable through registers would be
# more complicated than is worth it, so we hard-code the indices for some of the
# clocks. The control and default CHDR clocks are 0/1, followed by the radio
# clocks.
# Note that indices can also be dynamically allocated.
clocks:
- name: rfnoc_ctrl
  index: 1
- name: rfnoc_chdr
  index: 2
- name: ce
  index: 3
- name: radio
  index: 4
- name: radio_2x
  index: 7
- name: dram
  index: 8

io_ports:
  ctrlport_radio0:
    type: ctrlport
    drive: slave
    rename:
      pattern: (ctrlport_)(.*)
      repl: m_\1radio0_\2
  ctrlport_radio1:
    type: ctrlport
    drive: slave
    rename:
      pattern: (ctrlport_)(.*)
      repl: m_\1radio1_\2
  time:
    type: timekeeper
    drive: broadcaster
  radio0:
    type: radio
    drive: master
    parameters:
      spc: 4
      num_ports: 2
    rename:
      pattern: (.*)
      repl: \1_radio0
  radio1:
    type: radio
    drive: master
    parameters:
      spc: 4
      num_ports: 2
    rename:
      pattern: (.*)
      repl: \1_radio1
  dram0:
    type: axi4_mm
    drive: slave
    rename:
      pattern: (.*)
      repl: dram0_\1
  dram1:
    type: axi4_mm
    drive: slave
    rename:
      pattern: (.*)
      repl: dram1_\1
  serial:
    type: device_dna
    drive: listener
    parameters:
      width: 96
  qsfp0:
    type: x4xx_qsfp
    drive: slave
    rename:
      pattern: (.*)
      repl: qsfp0_\1
  qsfp1:
    type: x4xx_qsfp
    drive: slave
    rename:
      pattern: (.*)
      repl: qsfp1_\1
  chdr_dma_s:
    type: axis_chdr
    drive: slave
    parameters:
      width: ${ config.chdr_width }
    rename:
      pattern: (.*)
      repl: s_dma_\1
  chdr_dma_m:
    type: axis_chdr
    drive: master
    parameters:
      width: ${ config.chdr_width }
    rename:
      pattern: (.*)
      repl: m_dma_\1

default_secure_image_core:
    modules:
      device_dna:
        block_desc: 'device_dna.yml'
        parameters:
          device_type: "ULTRASCALE"
    connections:
    - { srcblk: device_dna, srcport: device_dna, dstblk: _device_, dstport: serial}
